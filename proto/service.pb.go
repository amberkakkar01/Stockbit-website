// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StockbitClient is the client API for Stockbit service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StockbitClient interface {
	SearchMovie(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	GetMovie(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
}

type stockbitClient struct {
	cc *grpc.ClientConn
}

func NewStockbitClient(cc *grpc.ClientConn) StockbitClient {
	return &stockbitClient{cc}
}

func (c *stockbitClient) SearchMovie(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/proto.Stockbit/SearchMovie", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stockbitClient) GetMovie(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/proto.Stockbit/GetMovie", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StockbitServer is the server API for Stockbit service.
type StockbitServer interface {
	SearchMovie(context.Context, *SearchRequest) (*SearchResponse, error)
	GetMovie(context.Context, *GetRequest) (*GetResponse, error)
}

func RegisterStockbitServer(s *grpc.Server, srv StockbitServer) {
	s.RegisterService(&_Stockbit_serviceDesc, srv)
}

func _Stockbit_SearchMovie_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockbitServer).SearchMovie(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Stockbit/SearchMovie",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockbitServer).SearchMovie(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stockbit_GetMovie_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockbitServer).GetMovie(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Stockbit/GetMovie",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockbitServer).GetMovie(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Stockbit_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Stockbit",
	HandlerType: (*StockbitServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchMovie",
			Handler:    _Stockbit_SearchMovie_Handler,
		},
		{
			MethodName: "GetMovie",
			Handler:    _Stockbit_GetMovie_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_service_28a287a39473b9cd) }

var fileDescriptor_service_28a287a39473b9cd = []byte{
	// 130 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x52, 0x5c, 0x29,
	0x89, 0x25, 0x89, 0x10, 0x21, 0xa3, 0x5a, 0x2e, 0x8e, 0xe0, 0x92, 0xfc, 0xe4, 0xec, 0xa4, 0xcc,
	0x12, 0x21, 0x1b, 0x2e, 0xee, 0xe0, 0xd4, 0xc4, 0xa2, 0xe4, 0x0c, 0xdf, 0xfc, 0xb2, 0xcc, 0x54,
	0x21, 0x11, 0x88, 0x12, 0x3d, 0x88, 0x58, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x94, 0x28,
	0x9a, 0x68, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x12, 0x83, 0x90, 0x31, 0x17, 0x87, 0x7b, 0x6a,
	0x09, 0x44, 0xab, 0x20, 0x54, 0x91, 0x7b, 0x6a, 0x09, 0x4c, 0x9f, 0x10, 0xb2, 0x10, 0x4c, 0x53,
	0x12, 0x1b, 0x58, 0xd0, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x9d, 0x06, 0x91, 0xf4, 0xa9, 0x00,
	0x00, 0x00,
}
